name: Maestro UI Tests
on: [pull_request]

jobs:
  maestro-tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Make gradlew executable
        run: chmod +x ./gradlew
        
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Set up Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: Pixel_3a
          emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -no-audio -no-boot-anim
          script: |
            # Make the CI test script executable
            chmod +x ./scripts/run-maestro-tests-ci.sh
            
            # Wait for emulator to be fully ready
            echo "‚è≥ Waiting for emulator to be fully ready..."
            adb wait-for-device
            adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'
            echo "‚úÖ Emulator is ready"
            
            # Run the Maestro tests using the CI-optimized script
            echo "üß™ Running Maestro tests using CI script..."
            ./scripts/run-maestro-tests-ci.sh
            
            # The script will exit with non-zero code if tests fail
            # This will cause the CI to fail automatically
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
            
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: maestro-test-results
          path: |
            maestro-tests/results/
            
      - name: Comment test results on PR
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå **Maestro UI Tests Failed**\n\nSome UI tests failed. Please check the test results in the workflow logs.'
            })